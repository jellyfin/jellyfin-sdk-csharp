// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Jellyfin.Sdk.Generated.Models
{
    /// <summary>
    /// Class SeriesTimerInfoDto.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class SeriesTimerInfoDto : IParsable
    {
        /// <summary>Gets or sets the channel id of the recording.</summary>
        public Guid? ChannelId { get; set; }
        /// <summary>Gets or sets the channel name of the recording.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ChannelName { get; set; }
#nullable restore
#else
        public string ChannelName { get; set; }
#endif
        /// <summary>The ChannelPrimaryImageTag property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ChannelPrimaryImageTag { get; set; }
#nullable restore
#else
        public string ChannelPrimaryImageTag { get; set; }
#endif
        /// <summary>Gets or sets the day pattern.</summary>
        public global::Jellyfin.Sdk.Generated.Models.SeriesTimerInfoDto_DayPattern? DayPattern { get; set; }
        /// <summary>Gets or sets the days.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Jellyfin.Sdk.Generated.Models.DayOfWeekObject?>? Days { get; set; }
#nullable restore
#else
        public List<global::Jellyfin.Sdk.Generated.Models.DayOfWeekObject?> Days { get; set; }
#endif
        /// <summary>Gets or sets the end date of the recording, in UTC.</summary>
        public DateTimeOffset? EndDate { get; set; }
        /// <summary>Gets or sets the external channel identifier.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExternalChannelId { get; set; }
#nullable restore
#else
        public string ExternalChannelId { get; set; }
#endif
        /// <summary>Gets or sets the external identifier.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExternalId { get; set; }
#nullable restore
#else
        public string ExternalId { get; set; }
#endif
        /// <summary>Gets or sets the external program identifier.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExternalProgramId { get; set; }
#nullable restore
#else
        public string ExternalProgramId { get; set; }
#endif
        /// <summary>Gets or sets the Id of the recording.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Gets or sets the image tags.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Jellyfin.Sdk.Generated.Models.SeriesTimerInfoDto_ImageTags? ImageTags { get; set; }
#nullable restore
#else
        public global::Jellyfin.Sdk.Generated.Models.SeriesTimerInfoDto_ImageTags ImageTags { get; set; }
#endif
        /// <summary>Gets or sets a value indicating whether this instance is post padding required.</summary>
        public bool? IsPostPaddingRequired { get; set; }
        /// <summary>Gets or sets a value indicating whether this instance is pre padding required.</summary>
        public bool? IsPrePaddingRequired { get; set; }
        /// <summary>The KeepUntil property</summary>
        public global::Jellyfin.Sdk.Generated.Models.SeriesTimerInfoDto_KeepUntil? KeepUntil { get; set; }
        /// <summary>The KeepUpTo property</summary>
        public int? KeepUpTo { get; set; }
        /// <summary>Gets or sets the name of the recording.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Gets or sets the description of the recording.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Overview { get; set; }
#nullable restore
#else
        public string Overview { get; set; }
#endif
        /// <summary>Gets or sets the parent backdrop image tags.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ParentBackdropImageTags { get; set; }
#nullable restore
#else
        public List<string> ParentBackdropImageTags { get; set; }
#endif
        /// <summary>Gets or sets the Id of the Parent that has a backdrop if the item does not have one.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParentBackdropItemId { get; set; }
#nullable restore
#else
        public string ParentBackdropItemId { get; set; }
#endif
        /// <summary>Gets or sets the parent primary image item identifier.</summary>
        public Guid? ParentPrimaryImageItemId { get; set; }
        /// <summary>Gets or sets the parent primary image tag.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParentPrimaryImageTag { get; set; }
#nullable restore
#else
        public string ParentPrimaryImageTag { get; set; }
#endif
        /// <summary>Gets or sets the parent thumb image tag.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParentThumbImageTag { get; set; }
#nullable restore
#else
        public string ParentThumbImageTag { get; set; }
#endif
        /// <summary>Gets or sets the parent thumb item id.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParentThumbItemId { get; set; }
#nullable restore
#else
        public string ParentThumbItemId { get; set; }
#endif
        /// <summary>Gets or sets the post padding seconds.</summary>
        public int? PostPaddingSeconds { get; set; }
        /// <summary>Gets or sets the pre padding seconds.</summary>
        public int? PrePaddingSeconds { get; set; }
        /// <summary>Gets or sets the priority.</summary>
        public int? Priority { get; set; }
        /// <summary>Gets or sets the program identifier.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProgramId { get; set; }
#nullable restore
#else
        public string ProgramId { get; set; }
#endif
        /// <summary>Gets or sets a value indicating whether [record any channel].</summary>
        public bool? RecordAnyChannel { get; set; }
        /// <summary>Gets or sets a value indicating whether [record any time].</summary>
        public bool? RecordAnyTime { get; set; }
        /// <summary>Gets or sets a value indicating whether [record new only].</summary>
        public bool? RecordNewOnly { get; set; }
        /// <summary>Gets or sets the server identifier.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ServerId { get; set; }
#nullable restore
#else
        public string ServerId { get; set; }
#endif
        /// <summary>Gets or sets the name of the service.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ServiceName { get; set; }
#nullable restore
#else
        public string ServiceName { get; set; }
#endif
        /// <summary>The SkipEpisodesInLibrary property</summary>
        public bool? SkipEpisodesInLibrary { get; set; }
        /// <summary>Gets or sets the start date of the recording, in UTC.</summary>
        public DateTimeOffset? StartDate { get; set; }
        /// <summary>The Type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Jellyfin.Sdk.Generated.Models.SeriesTimerInfoDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Jellyfin.Sdk.Generated.Models.SeriesTimerInfoDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Jellyfin.Sdk.Generated.Models.SeriesTimerInfoDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "ChannelId", n => { ChannelId = n.GetGuidValue(); } },
                { "ChannelName", n => { ChannelName = n.GetStringValue(); } },
                { "ChannelPrimaryImageTag", n => { ChannelPrimaryImageTag = n.GetStringValue(); } },
                { "DayPattern", n => { DayPattern = n.GetEnumValue<global::Jellyfin.Sdk.Generated.Models.SeriesTimerInfoDto_DayPattern>(); } },
                { "Days", n => { Days = n.GetCollectionOfEnumValues<global::Jellyfin.Sdk.Generated.Models.DayOfWeekObject>()?.AsList(); } },
                { "EndDate", n => { EndDate = n.GetDateTimeOffsetValue(); } },
                { "ExternalChannelId", n => { ExternalChannelId = n.GetStringValue(); } },
                { "ExternalId", n => { ExternalId = n.GetStringValue(); } },
                { "ExternalProgramId", n => { ExternalProgramId = n.GetStringValue(); } },
                { "Id", n => { Id = n.GetStringValue(); } },
                { "ImageTags", n => { ImageTags = n.GetObjectValue<global::Jellyfin.Sdk.Generated.Models.SeriesTimerInfoDto_ImageTags>(global::Jellyfin.Sdk.Generated.Models.SeriesTimerInfoDto_ImageTags.CreateFromDiscriminatorValue); } },
                { "IsPostPaddingRequired", n => { IsPostPaddingRequired = n.GetBoolValue(); } },
                { "IsPrePaddingRequired", n => { IsPrePaddingRequired = n.GetBoolValue(); } },
                { "KeepUntil", n => { KeepUntil = n.GetEnumValue<global::Jellyfin.Sdk.Generated.Models.SeriesTimerInfoDto_KeepUntil>(); } },
                { "KeepUpTo", n => { KeepUpTo = n.GetIntValue(); } },
                { "Name", n => { Name = n.GetStringValue(); } },
                { "Overview", n => { Overview = n.GetStringValue(); } },
                { "ParentBackdropImageTags", n => { ParentBackdropImageTags = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "ParentBackdropItemId", n => { ParentBackdropItemId = n.GetStringValue(); } },
                { "ParentPrimaryImageItemId", n => { ParentPrimaryImageItemId = n.GetGuidValue(); } },
                { "ParentPrimaryImageTag", n => { ParentPrimaryImageTag = n.GetStringValue(); } },
                { "ParentThumbImageTag", n => { ParentThumbImageTag = n.GetStringValue(); } },
                { "ParentThumbItemId", n => { ParentThumbItemId = n.GetStringValue(); } },
                { "PostPaddingSeconds", n => { PostPaddingSeconds = n.GetIntValue(); } },
                { "PrePaddingSeconds", n => { PrePaddingSeconds = n.GetIntValue(); } },
                { "Priority", n => { Priority = n.GetIntValue(); } },
                { "ProgramId", n => { ProgramId = n.GetStringValue(); } },
                { "RecordAnyChannel", n => { RecordAnyChannel = n.GetBoolValue(); } },
                { "RecordAnyTime", n => { RecordAnyTime = n.GetBoolValue(); } },
                { "RecordNewOnly", n => { RecordNewOnly = n.GetBoolValue(); } },
                { "ServerId", n => { ServerId = n.GetStringValue(); } },
                { "ServiceName", n => { ServiceName = n.GetStringValue(); } },
                { "SkipEpisodesInLibrary", n => { SkipEpisodesInLibrary = n.GetBoolValue(); } },
                { "StartDate", n => { StartDate = n.GetDateTimeOffsetValue(); } },
                { "Type", n => { Type = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("ChannelId", ChannelId);
            writer.WriteStringValue("ChannelName", ChannelName);
            writer.WriteStringValue("ChannelPrimaryImageTag", ChannelPrimaryImageTag);
            writer.WriteEnumValue<global::Jellyfin.Sdk.Generated.Models.SeriesTimerInfoDto_DayPattern>("DayPattern", DayPattern);
            writer.WriteCollectionOfEnumValues<global::Jellyfin.Sdk.Generated.Models.DayOfWeekObject>("Days", Days);
            writer.WriteDateTimeOffsetValue("EndDate", EndDate);
            writer.WriteStringValue("ExternalChannelId", ExternalChannelId);
            writer.WriteStringValue("ExternalId", ExternalId);
            writer.WriteStringValue("ExternalProgramId", ExternalProgramId);
            writer.WriteStringValue("Id", Id);
            writer.WriteObjectValue<global::Jellyfin.Sdk.Generated.Models.SeriesTimerInfoDto_ImageTags>("ImageTags", ImageTags);
            writer.WriteBoolValue("IsPostPaddingRequired", IsPostPaddingRequired);
            writer.WriteBoolValue("IsPrePaddingRequired", IsPrePaddingRequired);
            writer.WriteEnumValue<global::Jellyfin.Sdk.Generated.Models.SeriesTimerInfoDto_KeepUntil>("KeepUntil", KeepUntil);
            writer.WriteIntValue("KeepUpTo", KeepUpTo);
            writer.WriteStringValue("Name", Name);
            writer.WriteStringValue("Overview", Overview);
            writer.WriteCollectionOfPrimitiveValues<string>("ParentBackdropImageTags", ParentBackdropImageTags);
            writer.WriteStringValue("ParentBackdropItemId", ParentBackdropItemId);
            writer.WriteGuidValue("ParentPrimaryImageItemId", ParentPrimaryImageItemId);
            writer.WriteStringValue("ParentPrimaryImageTag", ParentPrimaryImageTag);
            writer.WriteStringValue("ParentThumbImageTag", ParentThumbImageTag);
            writer.WriteStringValue("ParentThumbItemId", ParentThumbItemId);
            writer.WriteIntValue("PostPaddingSeconds", PostPaddingSeconds);
            writer.WriteIntValue("PrePaddingSeconds", PrePaddingSeconds);
            writer.WriteIntValue("Priority", Priority);
            writer.WriteStringValue("ProgramId", ProgramId);
            writer.WriteBoolValue("RecordAnyChannel", RecordAnyChannel);
            writer.WriteBoolValue("RecordAnyTime", RecordAnyTime);
            writer.WriteBoolValue("RecordNewOnly", RecordNewOnly);
            writer.WriteStringValue("ServerId", ServerId);
            writer.WriteStringValue("ServiceName", ServiceName);
            writer.WriteBoolValue("SkipEpisodesInLibrary", SkipEpisodesInLibrary);
            writer.WriteDateTimeOffsetValue("StartDate", StartDate);
            writer.WriteStringValue("Type", Type);
        }
    }
}
#pragma warning restore CS0618
