// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Jellyfin.Sdk.Generated.Models
{
    /// <summary>
    /// Manifest type for backups internal structure.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class BackupManifestDto : IParsable
    {
        /// <summary>Gets or sets the backup engine version this backup was created with.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BackupEngineVersion { get; set; }
#nullable restore
#else
        public string BackupEngineVersion { get; set; }
#endif
        /// <summary>Gets or sets the date this backup was created with.</summary>
        public DateTimeOffset? DateCreated { get; set; }
        /// <summary>Gets or sets the contents of the backup archive.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Jellyfin.Sdk.Generated.Models.BackupOptionsDto? Options { get; set; }
#nullable restore
#else
        public global::Jellyfin.Sdk.Generated.Models.BackupOptionsDto Options { get; set; }
#endif
        /// <summary>Gets or sets the path to the backup on the system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Path { get; set; }
#nullable restore
#else
        public string Path { get; set; }
#endif
        /// <summary>Gets or sets the jellyfin version this backup was created with.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ServerVersion { get; set; }
#nullable restore
#else
        public string ServerVersion { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Jellyfin.Sdk.Generated.Models.BackupManifestDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Jellyfin.Sdk.Generated.Models.BackupManifestDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Jellyfin.Sdk.Generated.Models.BackupManifestDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "BackupEngineVersion", n => { BackupEngineVersion = n.GetStringValue(); } },
                { "DateCreated", n => { DateCreated = n.GetDateTimeOffsetValue(); } },
                { "Options", n => { Options = n.GetObjectValue<global::Jellyfin.Sdk.Generated.Models.BackupOptionsDto>(global::Jellyfin.Sdk.Generated.Models.BackupOptionsDto.CreateFromDiscriminatorValue); } },
                { "Path", n => { Path = n.GetStringValue(); } },
                { "ServerVersion", n => { ServerVersion = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("BackupEngineVersion", BackupEngineVersion);
            writer.WriteDateTimeOffsetValue("DateCreated", DateCreated);
            writer.WriteObjectValue<global::Jellyfin.Sdk.Generated.Models.BackupOptionsDto>("Options", Options);
            writer.WriteStringValue("Path", Path);
            writer.WriteStringValue("ServerVersion", ServerVersion);
        }
    }
}
#pragma warning restore CS0618
