// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Jellyfin.Sdk.Generated.Models
{
    /// <summary>
    /// A class for transcoding profile information.Note for client developers: Conditions defined in MediaBrowser.Model.Dlna.CodecProfile has higher priority and can override values defined here.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class TranscodingProfile : IParsable
    {
        /// <summary>Gets or sets the audio codec.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AudioCodec { get; set; }
#nullable restore
#else
        public string AudioCodec { get; set; }
#endif
        /// <summary>Gets or sets a value indicating whether breaking the video stream on non-keyframes is supported.</summary>
        public bool? BreakOnNonKeyFrames { get; set; }
        /// <summary>Gets or sets the profile conditions.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Jellyfin.Sdk.Generated.Models.ProfileCondition>? Conditions { get; set; }
#nullable restore
#else
        public List<global::Jellyfin.Sdk.Generated.Models.ProfileCondition> Conditions { get; set; }
#endif
        /// <summary>Gets or sets the container.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Container { get; set; }
#nullable restore
#else
        public string Container { get; set; }
#endif
        /// <summary>Gets or sets the encoding context.</summary>
        public global::Jellyfin.Sdk.Generated.Models.TranscodingProfile_Context? Context { get; set; }
        /// <summary>Gets or sets a value indicating whether timestamps should be copied.</summary>
        public bool? CopyTimestamps { get; set; }
        /// <summary>Gets or sets a value indicating whether variable bitrate encoding is supported.</summary>
        public bool? EnableAudioVbrEncoding { get; set; }
        /// <summary>Gets or sets a value indicating whether M2TS mode is enabled.</summary>
        public bool? EnableMpegtsM2TsMode { get; set; }
        /// <summary>Gets or sets a value indicating whether subtitles are allowed in the manifest.</summary>
        public bool? EnableSubtitlesInManifest { get; set; }
        /// <summary>Gets or sets a value indicating whether the content length should be estimated.</summary>
        public bool? EstimateContentLength { get; set; }
        /// <summary>Gets or sets the maximum audio channels.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MaxAudioChannels { get; set; }
#nullable restore
#else
        public string MaxAudioChannels { get; set; }
#endif
        /// <summary>Gets or sets the minimum amount of segments.</summary>
        public int? MinSegments { get; set; }
        /// <summary>Gets or sets the protocol.</summary>
        public global::Jellyfin.Sdk.Generated.Models.TranscodingProfile_Protocol? Protocol { get; set; }
        /// <summary>Gets or sets the segment length.</summary>
        public int? SegmentLength { get; set; }
        /// <summary>Gets or sets the transcoding seek info mode.</summary>
        public global::Jellyfin.Sdk.Generated.Models.TranscodingProfile_TranscodeSeekInfo? TranscodeSeekInfo { get; set; }
        /// <summary>Gets or sets the DLNA profile type.</summary>
        public global::Jellyfin.Sdk.Generated.Models.TranscodingProfile_Type? Type { get; set; }
        /// <summary>Gets or sets the video codec.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VideoCodec { get; set; }
#nullable restore
#else
        public string VideoCodec { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Jellyfin.Sdk.Generated.Models.TranscodingProfile"/> and sets the default values.
        /// </summary>
        public TranscodingProfile()
        {
            Context = global::Jellyfin.Sdk.Generated.Models.TranscodingProfile_Context.Streaming;
            TranscodeSeekInfo = global::Jellyfin.Sdk.Generated.Models.TranscodingProfile_TranscodeSeekInfo.Auto;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Jellyfin.Sdk.Generated.Models.TranscodingProfile"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Jellyfin.Sdk.Generated.Models.TranscodingProfile CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Jellyfin.Sdk.Generated.Models.TranscodingProfile();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "AudioCodec", n => { AudioCodec = n.GetStringValue(); } },
                { "BreakOnNonKeyFrames", n => { BreakOnNonKeyFrames = n.GetBoolValue(); } },
                { "Conditions", n => { Conditions = n.GetCollectionOfObjectValues<global::Jellyfin.Sdk.Generated.Models.ProfileCondition>(global::Jellyfin.Sdk.Generated.Models.ProfileCondition.CreateFromDiscriminatorValue)?.AsList(); } },
                { "Container", n => { Container = n.GetStringValue(); } },
                { "Context", n => { Context = n.GetEnumValue<global::Jellyfin.Sdk.Generated.Models.TranscodingProfile_Context>(); } },
                { "CopyTimestamps", n => { CopyTimestamps = n.GetBoolValue(); } },
                { "EnableAudioVbrEncoding", n => { EnableAudioVbrEncoding = n.GetBoolValue(); } },
                { "EnableMpegtsM2TsMode", n => { EnableMpegtsM2TsMode = n.GetBoolValue(); } },
                { "EnableSubtitlesInManifest", n => { EnableSubtitlesInManifest = n.GetBoolValue(); } },
                { "EstimateContentLength", n => { EstimateContentLength = n.GetBoolValue(); } },
                { "MaxAudioChannels", n => { MaxAudioChannels = n.GetStringValue(); } },
                { "MinSegments", n => { MinSegments = n.GetIntValue(); } },
                { "Protocol", n => { Protocol = n.GetEnumValue<global::Jellyfin.Sdk.Generated.Models.TranscodingProfile_Protocol>(); } },
                { "SegmentLength", n => { SegmentLength = n.GetIntValue(); } },
                { "TranscodeSeekInfo", n => { TranscodeSeekInfo = n.GetEnumValue<global::Jellyfin.Sdk.Generated.Models.TranscodingProfile_TranscodeSeekInfo>(); } },
                { "Type", n => { Type = n.GetEnumValue<global::Jellyfin.Sdk.Generated.Models.TranscodingProfile_Type>(); } },
                { "VideoCodec", n => { VideoCodec = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("AudioCodec", AudioCodec);
            writer.WriteBoolValue("BreakOnNonKeyFrames", BreakOnNonKeyFrames);
            writer.WriteCollectionOfObjectValues<global::Jellyfin.Sdk.Generated.Models.ProfileCondition>("Conditions", Conditions);
            writer.WriteStringValue("Container", Container);
            writer.WriteEnumValue<global::Jellyfin.Sdk.Generated.Models.TranscodingProfile_Context>("Context", Context);
            writer.WriteBoolValue("CopyTimestamps", CopyTimestamps);
            writer.WriteBoolValue("EnableAudioVbrEncoding", EnableAudioVbrEncoding);
            writer.WriteBoolValue("EnableMpegtsM2TsMode", EnableMpegtsM2TsMode);
            writer.WriteBoolValue("EnableSubtitlesInManifest", EnableSubtitlesInManifest);
            writer.WriteBoolValue("EstimateContentLength", EstimateContentLength);
            writer.WriteStringValue("MaxAudioChannels", MaxAudioChannels);
            writer.WriteIntValue("MinSegments", MinSegments);
            writer.WriteEnumValue<global::Jellyfin.Sdk.Generated.Models.TranscodingProfile_Protocol>("Protocol", Protocol);
            writer.WriteIntValue("SegmentLength", SegmentLength);
            writer.WriteEnumValue<global::Jellyfin.Sdk.Generated.Models.TranscodingProfile_TranscodeSeekInfo>("TranscodeSeekInfo", TranscodeSeekInfo);
            writer.WriteEnumValue<global::Jellyfin.Sdk.Generated.Models.TranscodingProfile_Type>("Type", Type);
            writer.WriteStringValue("VideoCodec", VideoCodec);
        }
    }
}
#pragma warning restore CS0618
