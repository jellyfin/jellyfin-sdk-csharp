name: SDK Publish

on:
  release:
    types:
      - published

jobs:
  publish:
    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    defaults:
      run:
        working-directory: ./src
    runs-on: ubuntu-24.04
    if: ${{ startsWith(github.ref, 'refs/tags/v') && github.repository == 'jellyfin/jellyfin-sdk-csharp' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: "master"

      - name: Setup .NET
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4
        with:
          dotnet-version: |
            8.0.x

      - name: Install dotnet-setversion
        run: |
          dotnet tool install -g dotnet-setversion

      - name: Restore packages
        run: |
          dotnet restore
          dotnet tool restore

      - name: Get Version
        id: version
        run: |
          echo "number=$( echo ${{ github.event.release.tag_name }} | tr -d v )" >> $GITHUB_OUTPUT

      - name: Set project version
        run: |
          setversion ${{ steps.version.outputs.number }} Jellyfin.Sdk/Jellyfin.Sdk.csproj

      - name: Generate sdk
        run: |
          dotnet nuke --configuration stable

      - name: Build packages
        run: |
          dotnet build -c Release Jellyfin.Sdk

      - name: Publish to nuget
        run: |
          dotnet nuget push artifacts/package/release/*.nupkg --api-key ${{ secrets.NUGET_APIKEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

      - name: Commit new changes to the repo
        run: |
          git config user.name jellyfin-bot
          git config user.email team@jellyfin.org
          git pull
          git add .
          git commit --allow-empty -m "Update stable OpenAPI client"
          git push --force origin master
